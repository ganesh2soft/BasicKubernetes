pipeline {
    agent any

    tools {

        maven 'Maven'
    }


    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(
                        branches: [[name: '*/main']],
                        extensions: [],
                        userRemoteConfigs: [[url: 'https://github.com/ganesh2soft/BasicKubernetes.git']]
                )
            }
        }

        stage('Build Projects') {
            steps {
                script {
                    dir('krscitizen') {
                    
                    bat 'mvn  clean install'
                    }
                }
                   
                }
            }
        


        stage('Build Docker image') {
            steps {
                script {
                    dir('krscitizen') {
                    bat "docker build -t ganesh2soft/krscitizen ."
                    }
                }
            }
        }

        stage('Pushing Docker image') {
            steps {
                script {
                    dir('krscitizen') {
                    withCredentials([string(credentialsId: 'dochubganesh2soft', variable: 'DOCHUBPWD')]) {
                        bat "docker login -u ganesh2soft -p ${DOCHUBPWD}"
                        bat "docker push ganesh2soft/krscitizen"
                    }}
                    
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script{
                    dir('krscitizen'){
                    bat "minikube delete"
                    bat "minikube start"
                    bat "minikube image load ganesh2soft/krscitizen"
                    bat "kubectl apply -f krscitizen-deployment.yaml "
                    bat "kubectl apply -f krscitizen-service.yaml "
                    bat "kubectl apply -f krscitizen-mysql-deployment.yaml "
                    bat "kubectl apply -f krscitizen-mysql-service.yaml "
                    bat "kubectl apply -f krscitizen-mysql-volume.yaml "
                    bat "minikube image ls"
                    }
                }}}



        stage('Parallel Loading of Services and Dashboard')
                {
                    parallel{
                        stage('Run minikube dashboard') {
                            steps {
                                script {
                                    dir('krscitizen'){
                                    // Run minikube dashboard command
                                    bat 'minikube dashboard'
                                    echo 'Dashboard command completed'
                                    }
                                }
                            }
                        }
                        stage('Run minikube service') {
                            steps {
                                script {
                                    dir('krscitizen'){
                                    // Run minikube dashboard command
                                    bat "minikube service --all"
                                    echo 'Servicec command completed'
                                    }
                                }
                            }
                        }

                    }
                }

    }
}
